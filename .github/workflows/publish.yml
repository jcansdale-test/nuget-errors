# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true

jobs:
  repository-urls:
    strategy:      
      matrix:
        RepositoryUrl:
          - https://github.com/${{ github.repository }}
          - https://github.com/${{ github.repository_owner }}/unknown_repo
          - https://github.com/github/github    # private repo
          - https://github.com/desktop/desktop  # public repo
          - https://github.com/malformed        # not a repo
          - https://bitbucket.org/foo/bar       # not on github
          - ''                                  # no url defined
        source-url:
          - https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        
      fail-fast: false

    runs-on: ubuntu-latest

    # Use example from https://github.com/actions/setup-dotnet
    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use.
        source-url: ${{ matrix.source-url }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Create the package ${{ matrix.options }}
      run: dotnet pack --configuration Release -p:Version=0.0.${{ strategy.job-index }}-g${{ github.sha }} -p:RepositoryUrl=${{ matrix.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg

  source-urls:
    strategy:
      matrix:
        RepositoryUrl:
          - https://github.com/${{ github.repository }}
        source-url:
          - https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json # owner
          - https://nuget.pkg.github.com/${{ github.repository }}/index.json       # owner/repo
          - https://nuget.pkg.github.com/index.json                                # /index.json
          - https://nuget.pkg.github.com/                                          # no /index.json
          - https://github.com/${{ github.repository }}                            # repository url
          - https://nuget.pkg.github.com/JCANSDALE-TEST/index.json                 # upper-case
        
      fail-fast: false

    runs-on: ubuntu-latest

    env:
      version: 0.0.1-g${{ github.sha }}-${{ github.job }}-${{ strategy.job-index }}

    # Use example from https://github.com/actions/setup-dotnet
    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use.
        source-url: ${{ matrix.source-url }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Create the package ${{ matrix.options }}
      run: dotnet pack --configuration Release -p:Version=${{ env.version }} -p:RepositoryUrl=${{ matrix.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg

  tokens:
    strategy:
      matrix:
        RepositoryUrl:
          - https://github.com/${{ github.repository }}
        source-url:
          - https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        token:
          - '' # empty
          - bad_token
          - ${{ format('{0}{1}', '11f80c8d98105405a3c', '94c737be9ddeedf806e52') }} # read:packages
        
      fail-fast: false

    runs-on: ubuntu-latest

    env:
      version: 0.0.0-g${{ github.sha }}-${{ github.job }}-${{ strategy.job-index }}

    # Use example from https://github.com/actions/setup-dotnet
    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use.

    - name: Create the package ${{ matrix.options }}
      run: dotnet pack --configuration Release -p:Version=${{ env.version }} -p:RepositoryUrl=${{ matrix.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg --source ${{ matrix.source-url }} --api-key '${{ matrix.token }}'

  no-token:
    strategy:
      matrix:
        RepositoryUrl:
          - https://github.com/${{ github.repository }}
        source-url:
          - https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        
      fail-fast: false

    runs-on: ubuntu-latest

    # Use example from https://github.com/actions/setup-dotnet
    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use.

    - name: Create the package ${{ matrix.options }}
      run: dotnet pack --configuration Release -p:RepositoryUrl=${{ matrix.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg --source ${{ matrix.source-url }}

  safe:
    env:
      RepositoryUrl: https://github.com/${{ github.repository }}
      version: 0.0.1-safe-g${{ github.sha }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: '3.1.x' # SDK Version to use.
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'

    - name: Create the package
      run: dotnet pack --configuration Release -p:Version=${{ env.version }} -p:RepositoryUrl=${{ env.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  conflict:
    env:
      RepositoryUrl: https://github.com/${{ github.repository }}
      source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x' # SDK Version to use.
        source-url: ${{ env.source-url }}
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'

    - name: Create the package
      run: dotnet pack --configuration Release -p:Version=0.0.1 -p:RepositoryUrl=${{ env.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg --source ${{ env.source-url }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  api-key:
    env:
      RepositoryUrl: https://github.com/${{ github.repository }}
      source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      version: 0.0.1-g${{ github.sha }}-${{ github.job }}
      
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: '3.1.x' # SDK Version to use.
        source-url: ${{ env.source-url }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create the package
      run: dotnet pack --configuration Release -p:Version=${{ env.version }} -p:RepositoryUrl=${{ env.RepositoryUrl }}

    - name: Publish the package to GPR
      run: dotnet nuget push bin/Release/*.nupkg --source ${{ env.source-url }} -k ${{ secrets.GITHUB_TOKEN }}

